# App configs
app:
    # App name
    name: ${HELMET_APP_NAME:-helmet}
    # Env mode (dev or prod)
    mode: ${HELMET_APP_MODE:-prod}
    # HTTP port
    port: ${HELMET_API_PORT:-80}
    # Hostname
    hostname: ${HELMET_API_HOSTNAME:-127.0.0.1}
    # TLS configs
    tls:
        status: ${HELMET_API_TLS_STATUS:-off}
        crt_path: ${HELMET_API_TLS_PEMPATH:-cert/server.crt}
        key_path: ${HELMET_API_TLS_KEYPATH:-cert/server.key}

    # Global timeout
    timeout: ${HELMET_API_TIMEOUT:-50}

    # API Configs
    api:
        key: ${HELMET_API_KEY:-6c68b836-6f8e-465e-b59f-89c1db53afca}

    # Runtime, Requests/Response and Helmet Metrics
    metrics:
        prometheus:
            # Route for the metrics endpoint
            endpoint: ${HELMET_METRICS_PROM_ENDPOINT:-/_metrics}

    # Application Database
    database:
        # Database driver (sqlite3, mysql)
        driver: ${HELMET_DATABASE_DRIVER:-sqlite3}
        # Database Host
        host: ${HELMET_DATABASE_MYSQL_HOST:-localhost}
        # Database Port
        port: ${HELMET_DATABASE_MYSQL_PORT:-3306}
        # Database Name
        name: ${HELMET_DATABASE_MYSQL_DATABASE:-helmet.db}
        # Database Username
        username: ${HELMET_DATABASE_MYSQL_USERNAME:-root}
        # Database Password
        password: ${HELMET_DATABASE_MYSQL_PASSWORD:-root}

    # Key Store Configs
    key_store:
        # Cache Driver
        driver: ${HELMET_CACHE_DRIVER:-redis}
        # Redis Driver Configs
        redis:
            # Redis Address
            address: ${HELMET_CACHE_REDIS_ADDR:-localhost:6379}
            # Redis Password
            password: ${HELMET_CACHE_REDIS_PASSWORD:-}
            # Redis Database
            database: ${HELMET_CACHE_REDIS_DB:-0}

    # Endpoint Configs
    endpoint:
        # Orders Internal Service
        - name: order_service
          active: true
          proxy:
            listen_path: "/orders/v2/*"
            upstreams:
                balancing: roundrobin
                targets:
                    - target: https://httpbin.org/anything/orderService1/v2
                    - target: https://httpbin.org/anything/orderService2/v2
                    - target: https://httpbin.org/anything/orderService3/v2
                    - target: https://httpbin.org/anything/orderService4/v2
            http_methods:
                - ANY
            authentication:
                status: on
            # Rate limit use the key store for fast read write
            rate_limit:
                status: off
            # Circuit Breaker use the key store for fast read write
            circuit_breaker:
                status: off

        # Customers Internal Service
        - name: customer_service
          active: true
          proxy:
            listen_path: "/customer/v2/*"
            upstreams:
                balancing: random
                targets:
                    - target: https://httpbin.org/anything/customerService1/v2
                    - target: https://httpbin.org/anything/customerService2/v2
                    - target: https://httpbin.org/anything/customerService3/v2
                    - target: https://httpbin.org/anything/customerService4/v2
            http_methods:
                - GET
                - POST
                - PUT
                - DELETE
            authentication:
                status: on
            # Rate limit use the key store for fast read write
            rate_limit:
                status: off
            # Circuit Breaker use the key store for fast read write
            circuit_breaker:
                status: off

    # Log configs
    log:
        # Log level, it can be debug, info, warn, error, panic, fatal
        level: ${PEANUT_LOG_LEVEL:-info}
        # Output can be stdout or abs path to log file /var/logs/helmet.log
        output: ${PEANUT_LOG_OUTPUT:-/var/logs/helmet.log}
        # Format can be json
        format: ${PEANUT_LOG_FORMAT:-json}
