# App configs
app:
    # App name
    name: ${WALNUT_APP_NAME:-walnut}
    # Env mode (dev or prod)
    mode: ${WALNUT_APP_MODE:-dev}
    # HTTP port
    port: ${WALNUT_API_PORT:-8000}
    # Hostname
    hostname: ${WALNUT_API_HOSTNAME:-127.0.0.1}
    # TLS configs
    tls:
        status: ${WALNUT_API_TLS_STATUS:-off}
        crtPath: ${WALNUT_API_TLS_PEMPATH:-cert/server.crt}
        keyPath: ${WALNUT_API_TLS_KEYPATH:-cert/server.key}

    # API Configs
    api:
        key: ${WALNUT_API_KEY:-6c68b836-6f8e-465e-b59f-89c1db53afca}

    # Async Workers
    workers:
        # Queue max capacity
        buffer: ${WALNUT_WORKERS_CHAN_CAPACITY:-5000}
        # Number of concurrent workers
        count: ${WALNUT_WORKERS_COUNT:-4}

    # Runtime, Requests/Response and Walnut Metrics
    metrics:
        prometheus:
            # Route for the metrics endpoint
            endpoint: ${WALNUT_METRICS_PROM_ENDPOINT:-/_metrics}

    # Application Database
    database:
        # Database driver (sqlite3, mysql)
        driver: ${BEETLE_DATABASE_DRIVER:-sqlite3}
        # Database Host
        host: ${BEETLE_DATABASE_MYSQL_HOST:-localhost}
        # Database Port
        port: ${BEETLE_DATABASE_MYSQL_PORT:-3306}
        # Database Name
        name: ${BEETLE_DATABASE_MYSQL_DATABASE:-walnut.db}
        # Database Username
        username: ${BEETLE_DATABASE_MYSQL_USERNAME:-root}
        # Database Password
        password: ${BEETLE_DATABASE_MYSQL_PASSWORD:-root}

    # Components Configs
    component:
        # Tracing Component
        tracing:
            # Status on or off
            status: ${WALNUT_TRACING_STATUS:-off}
            # Tracing driver, jaeger supported so far
            driver: ${WALNUT_TRACING_DRIVER:-jaeger}
            # Tracing backend URL
            collectorEndpoint: ${WALNUT_TRACING_ENDPOINT:-http://jaeger.local:14268/api/traces}
            # Batch Size
            queueSize: ${WALNUT_TRACING_QUEUE_SIZE:-20}

        # Profiler Component
        profiler:
            # Profiler Status
            status: ${WALNUT_PROFILER_STATUS:-on}
            # Profiler Driver
            driver: ${WALNUT_PROFILER_DRIVER:-log}

    # Endpoints Configs
    endpoints:
        - name: orders
          active: true
          proxy:
            listen_path: "/orders/v2/*path"
            upstreams:
              balancing: roundrobin
              targets:
              - target: http://www.mocky.io/v2/595625d22900008702cd71e8
            methods:
            - GET
            # Auth Methods UUIDs
            authentication:
            - uuid: 6c68b836-6f8e-465e-b59f-89c1db53afca

        - name: customers
          active: true
          proxy:
            listen_path: "/customer/v3/*"
            upstreams:
              balancing: roundrobin
              targets:
              - target: http://www.mocky.io/v2/595625d22900008702cd71e8
            methods:
            - GET
            # Auth Methods UUIDs
            authentication:
            - uuid: 6c68b836-6f8e-465e-b59f-89c1db53afca

    # Log configs
    log:
        # Log level, it can be debug, info, warn, error, panic, fatal
        level: ${WALNUT_LOG_LEVEL:-info}
        # Output can be stdout or abs path to log file /var/logs/walnut.log
        output: ${WALNUT_LOG_OUTPUT:-stdout}
        # Format can be json
        format: ${WALNUT_LOG_FORMAT:-json}
